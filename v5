import math
from scipy import integrate
import matplotlib.pyplot as plt

# Accessing the value of pi
pi_value = math.pi

sigma = 10 #10 GHz
B = 7400 #Bandwidth, 7400 Ghz

# Lists to store values for plotting
d_values = []
C_values = []

# Loop over different values of d from 20 to 500
for d in range(87, 501):
    delta = B / d

    # Define the function to be integrated
    def integrand(x):
        return 1 / (math.sqrt(2 * math.pi * sigma**2)) * math.exp(-x**2 / (2 * sigma**2))

    # Initialize variables for results
    integral_results = []

    # Initial values for upper and lower bounds
    lower_limit = -1 * delta / 2
    upper_limit = delta / 2

    # Perform the integration for different upper and lower bounds
    for i in range(6):
        # Perform the integration
        result, _ = integrate.quad(integrand, lower_limit, upper_limit)

        # Increment upper and lower limits by 1
        lower_limit += 2 * delta / 2
        upper_limit += 2 * delta / 2

        # Store the result in the list
        integral_results.append(result)

    # Access individual variables from the integral_results list
    p0, p1, p2, p3, p4, p5 = integral_results

    # Calculate entropy H
    H = -((p1*math.log2(p1) + p2*math.log2(p2) + p3*math.log2(p3) + p4*math.log2(p4) + p5*math.log2(p5)) * 2 + p0*math.log2(p0))

    # Calculate capacity C
    C = math.log2(d) - H

    # Append values to lists for plotting
    d_values.append(d)
    C_values.append(C)

# Plot C vs d
plt.plot(d_values, C_values, label="Capacity vs d")
plt.scatter([202], [C_values[d_values.index(202)]], color='red', label="Highlight d=202")  # Highlight d=202
plt.annotate(f'C={C_values[d_values.index(202)]:.3f}', xy=(202, C_values[d_values.index(202)]), xytext=(202, C_values[d_values.index(202)] + 0.02),
             )
plt.xlabel("d")
plt.ylabel("Capacity (C)")
plt.title("Capacity vs d")
plt.show()
